# The schema.graphql file (not the same intention as datamodel.graphql) defines the type definitions for our Node GraphQL API. 
# These are the resolvers we want to expose through the Node app.


type Query{
  players: [Player!]!
  player(id: ID!): Player!
  alliances: [Alliance!]!
  alliance(id: ID!): Alliance!
  habitats: [Habitat!]!
  habitat(id: ID!): Habitat!
}

type Mutation{
  createPlayer(data: CreatePlayerInput): Player
  createAlliance(data: CreateAllianceInput): Alliance
  createHabitat(data: CreateHabitatInput): Habitat
}

input CreatePlayerInput {
  id: ID!
  nickname: String!
  habitatArray: [Habitat!]!
}

type Player {
  id: ID! @unique
  nickname: String!
  habitatArray: [Habitat!]!
}

input CreateAllianceInput {
  id: ID! @unique
  nickname: String!
  playerArray: [Player!]!
  castleScore: Float!
}

type Alliance {
  id: ID! @unique
  nickname: String!
  playerArray: [Player!]!
  castleScore: Float!
}

input CreateHabitatInput {
  id: ID! @unique
  mapX: Float!
  mapY: Float!
}

type Habitat {
  id: ID! @unique
  mapX: Float!
  mapY: Float!
}

enum MutationType {
    CREATED
    UPDATED
    DELETED
}